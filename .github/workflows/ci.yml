name: Workflow for Codecov

on: [push, pull_request]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry (Linux & macOS)
        if: runner.os != 'Windows'
        run: curl -sSL https://install.python-poetry.org | python3 -

      # - name: Install poetry (Windows)
      #   if: runner.os == 'Windows'
      #   run: |
      #     (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
      #     echo "C:\Users\${env:USERNAME}\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Add Poetry to path (Linux & macOS)
        if: runner.os != 'Windows'
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
        shell: bash

      # - name: Add Poetry to path (Windows)
      #   if: runner.os == 'Windows'
      #   run: echo "C:\Users\${env:USERNAME}\.local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
      #   shell: pwsh

      - name: Install dependencies
        run: poetry install

      - name: Run tests and collect coverage
        run: poetry run pytest --color=yes --disable-pytest-warnings --cov=molharbor --cov-report=xml tests/

    env:
      PYTHONIOENCODING: utf-8
      POETRY_VIRTUALENVS_CREATE: true
      POETRY_VIRTUALENVS_IN_PROJECT: true

  upload-coverage:
    name: Upload Coverage to Codecov
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          verbose: true
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

    env:
      PYTHONIOENCODING: utf-8
